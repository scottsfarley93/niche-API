{
  "name": "dag-map",
  "version": "1.0.2",
  "description": "DAG stands for Directed acyclic graph. It is used to build a graph of dependencies checking that there isn't circular dependencies",
  "main": "dist/dag-map.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/krisselden/dag-map.git"
  },
  "scripts": {
    "build": "ember build",
    "build:production": "ember build --environment=production",
    "test": "ember test",
    "test:server": "ember test --server",
    "prepublish": "ember build --environment production"
  },
  "author": {
    "name": "Kris Selden"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "devDependencies": {
    "broccoli-es6-module-transpiler": "^0.5.0",
    "broccoli-stew": "^0.2.1",
    "broccoli-uglify-js": "^0.1.3",
    "ember-cli": "^0.2.0",
    "es6-module-transpiler-amd-formatter": "^0.3.0",
    "qunitjs": "^1.17.1"
  },
  "readme": "# dag-map [![Build Status](https://travis-ci.org/krisselden/dag-map.png?branch=master)](https://travis-ci.org/krisselden/dag-map)\nA [directed acyclic graph](http://en.wikipedia.org/wiki/Directed_acyclic_graph) library for JavaScript.\n\nIn addition to being a DAG implmentation, it also provides value storage on the\nvertices. So in-short, it is a key/value DAG.\n\n\n## Downloads\n\n## API\n\n```js\n  // create a new draph;\n  var graph = new DAG();\n\n  // add some nodes\n  graph.add('foo');\n  graph.add('bar');\n  graph.add('baz');\n\n  // currently, no edges exist between these nodes, so lets add some\n\n  graph.addEdge('foo', 'bar');\n\n  // we now have an edge from 'foo' -> 'bar';\n\n  graph.addEdge('bar', 'baz');\n\n  // we now have an edge from 'foo' -> 'bar' -> 'baz';\n\n  // to have the graph calculate this topSort for us, we can use the topSort\n  // iterator, to build an ordered\n  var vertices = [];\n\n  graph.topsort(function(vertex, path){\n    vertices.push(vertex.name);\n  });\n\n  vertices === [ 'foo', 'bar', 'baz' ];\n```\n\n## Developing\n\n* `npm install`\n* `npm test` runs the tests headless\n* `npm run test:server` runs the tests and the development server\n* `npm build` builds the development dist\n* `npm build:production` builds the production dist\n",
  "bugs": {
    "url": "https://github.com/krisselden/dag-map/issues"
  },
  "_id": "dag-map@1.0.2",
  "dist": {
    "shasum": "c9b2b80766fbf8543dba507a5e55c2adc9e50cad"
  },
  "_from": "dag-map@~1.0.0",
  "_resolved": "https://registry.npmjs.org/dag-map/-/dag-map-1.0.2.tgz"
}
