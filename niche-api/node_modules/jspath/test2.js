var JSPath = require('./lib/jspath'),
    data = {
        "books" : [
            {
                "id" : 1,
                "title" : "Clean Code",
                "author" : { "name" : "Robert C. Martin" },
                "price" : 17.96
            },
            {
                "id" : 2,
                "title" : "Maintainable JavaScript",
                "author" : { "name" : "Nicholas C. Zakas" },
                "price" : -10
            },
            {
                "id" : 3,
                "title" : "Agile Software Development",
                "author" : { "name" : "Robert C. Martin" },
                "price" : 20
            },
            {
                "id" : 4,
                "title" : "JavaScript: The Good Parts",
                "author" : { "name" : "Douglas Crockford" },
                "price" : 15.67
            }
        ]
    };

    console.log(JSPath(
        '.books{ -(.price + 5 - 5 ) == 10 }',
        data));

function test(data) {
    var isArr = Array.isArray,
        concat = Array.prototype.concat, res, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23;
    res = data;
    isArr(res) || (res = [res]);
    v1 = [];
    v2 = 0;
    v3 = res.length;
    v7 = [];
    while(v2 < v3) {
        v4 = res[v2++];
        if(v4 != null) {
            v6 = v4['books'];
            if(v6 != null) {
                if(isArr(v6)) {
                    v3 > 1? v7.length? v7.push(v6) : v7[0] = v6 : v1 = v1.length? v1.concat(v6) : v6.slice();
                }
                else {
                    if(v7.length) {
                        v1 = concat.apply(v1, v7);
                        v7 = [];
                    }
                    v1.length? v1.push(v6) : v1[0] = v6;
                }
            }
        }
    }

    res = v3 > 1 && v7.length? v7.length > 1? concat.apply(v1, v7) : v1.concat(v7[0]) : v1;
    v7 = [];
    v6 = 0;
    v5 = res.length;
    while(v6 < v5) {
        v3 = res[v6++];
        v4 = false;
        v15 = v3;
        isArr(v15) || (v15 = [v15]);
        v17 = [];
        v18 = 0;
        v19 = v15.length;
        v23 = [];
        while(v18 < v19) {
            v20 = v15[v18++];
            if(v20 != null) {
                v22 = v20['price'];
                if(v22 != null) {
                    if(isArr(v22)) {
                        v19 > 1? v23.length? v23.push(v22) : v23[0] = v22 : v17 = v17.length? v17.concat(v22) : v22.slice();
                    }
                    else {
                        if(v23.length) {
                            v17 = concat.apply(v17, v23);
                            v23 = [];
                        }
                        v17.length? v17.push(v22) : v17[0] = v22;
                    }
                }
            }
        }
        v15 = v19 > 1 && v23.length? v23.length > 1? concat.apply(v17, v23) : v17.concat(v23[0]) : v17;
        v23 = 5;
        v22 = 5;
        v16 = v23 - v22;
        v14 = v15[0] + (isArr(v16)? v16[0] : v16);
        v2 = -(isArr(v14)? v14[0] : v14);
        v1 = 10;
        v8 = isArr(v2);
        v9 = false;
        if(v8 && v2.length === 1) {
            v2 = v2[0];
            v8 = false;
        }
        v10 = 0;
        if(v8) {
            v12 = v2.length;
            while(v10 < v12) {
                console.log(v2[v10], v1);
                if(typeof v2[v10] === "string" && typeof v1 === "string"? v2[v10].toLowerCase() === v1.toLowerCase() : v2[v10] == v1) {
                    v4 = true;
                    break;
                }
                ++v10;
            }
        }
        else {
            v4 = typeof v2 === "string" && typeof v1 === "string"? v2.toLowerCase() === v1.toLowerCase() : v2 == v1;
        }
        (typeof v4 === "boolean"? v4 : isArr(v4)? v4.length > 0 : !!v4) && v7.push(v3);
    }
    res = v7;
    return res;
}

function test2(data) {
    var isArr = Array.isArray,
        concat = Array.prototype.concat,res,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23;
        res=data;isArr(res) || (res = [res]);v1= [];v2= 0;v3=res.length;v7= [];

    while(v2<v3) {
        v4=res[v2++];
        if(v4!= null) {
            v6=v4['books'];
            if(v6!= null) {
                if(isArr(v6)) {
                    v3> 1?v7.length?v7.push(v6) :v7[0] =v6:v1=v1.length?v1.concat(v6) :v6.slice();
                }
                else {
                    if(v7.length) {
                        v1= concat.apply(v1,v7);v7= [];}
                    v1.length?v1.push(v6) :v1[0] =v6;
                }
            }
        }
    }
    res=v3> 1 &&v7.length?v7.length > 1?concat.apply(v1,v7) :v1.concat(v7[0]) :v1;v7= [];v6= 0;v5=res.length;
    while(v6<v5) {
        v3=res[v6++];
        v4= false;
        v15=v3;
        isArr(v15) || (v15 = [v15]);v17= [];v18= 0;v19=v15.length;v23= [];
        while(v18<v19) {
            v20=v15[v18++];
            if(v20!= null) {
                v22=v20['price'];
                if(v22!= null) {
                    if(isArr(v22)) {
                        v19> 1?v23.length?v23.push(v22) :v23[0] =v22:v17=v17.length?v17.concat(v22) :v22.slice();
                    }
                    else {
                        if(v23.length) {
                            v17= concat.apply(v17,v23);v23= [];
                        }
                        v17.length?v17.push(v22) :v17[0] =v22;
                    }
                }
            }
        }
        v15=v19> 1 &&v23.length?v23.length > 1?concat.apply(v17,v23) :v17.concat(v23[0]) :v17;
        v23=5;v22=5;
        v16=v23+v22;
        v14=v15[0]-(isArr(v16)?v16[0] : v16);
        v2= -(isArr(v14)?v14[0] : v14);v1=10;v8=isArr(v2);v9=false;
        if(v8&&v2.length === 1) {
            v2=v2[0];
            v8= false;
        }
        v10= 0;
        if(v8) {
            v12=v2.length;
            while(v10<v12) {
                if(typeof v2[v10]=== "string" && typeof v1=== "string"?v2[v10].toLowerCase() ===v1.toLowerCase() :v2[v10]==v1) {
                    v4= true;
                    break;
                }
                ++v10;
            }
        }
        else {
            console.log(v1, v2);
            v4=typeof v2=== "string" && typeof v1=== "string"?v2.toLowerCase() ===v1.toLowerCase() :v2==v1;
        }

        (typeof v4=== "boolean"?v4:isArr(v4)?v4.length > 0 : !!v4)&&v7.push(v3);
    }
    res=v7;

    return res;
}
